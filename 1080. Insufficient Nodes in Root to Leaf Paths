class Solution {
    public boolean dfs(TreeNode root, int limit, int sum){
       if(root.left == null && root.right == null){
           sum += root.val;
           if(sum < limit){
               return true;
           }
           return false;
       }
       boolean left = true, right = true;
        if(root.left != null)
            left  = dfs(root.left, limit, sum + root.val);
        if(root.right != null) 
            right = dfs(root.right, limit, sum + root.val);
        if(left && right)return true;
        if(left)root.left = null;
        if(right) root.right = null;
        return false;
    }
    public TreeNode sufficientSubset(TreeNode root, int limit) {
        if(root == null)return root;
        return  dfs(root, limit, 0) == false ? root : null;  
    }
}
