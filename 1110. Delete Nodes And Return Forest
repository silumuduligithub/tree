class Solution {
    public TreeNode dfs(TreeNode root, Set<Integer> set, List<TreeNode> ans){
        if(root == null)return null;
        root.left = dfs(root.left, set, ans);
        root.right = dfs(root.right, set, ans);
        if(set.contains(root.val)){
            if(root.left != null){
                ans.add(root.left);
            }
            if(root.right != null){
                ans.add(root.right);
            }
            return null;
        }
        return root;
    }
    public List<TreeNode> delNodes(TreeNode root, int[] to_delete) {
        Set<Integer> set = new HashSet<>();
        for(int d : to_delete){
            set.add(d);
        }
        List<TreeNode> ans = new ArrayList<>();
        dfs(root, set, ans);
        if(!set.contains(root.val)){
            ans.add(root);
        }
        return ans;       
    }
}
