lass Solution {
    public List<TreeNode> treeBuilder (int n){
        if(n == 1){
            List<TreeNode> al = new ArrayList<>();
            al.add(new TreeNode(0));
            return al;
        }
        List<TreeNode> ans = new ArrayList<>();
        for(int i = 1; i < n; i += 2){
            List<TreeNode> left = treeBuilder(i);
            List<TreeNode> right = treeBuilder(n - i - 1);
            for(TreeNode l : left){
                for(TreeNode r : right){
                    TreeNode root = new TreeNode(0);
                    root.left = l;
                    root.right = r;
                    ans.add(root);
                }
            }
        }
        return ans;
    }
    public List<TreeNode> allPossibleFBT(int n) {
        return treeBuilder(n);
    }
}
