class Solution {
    public String serialization(TreeNode root, List<TreeNode> ans, HashMap<String, Integer> map){
        if(root == null){
            return "#";
        }
        String left = serialization(root.left, ans, map);
        String right = serialization(root.right, ans, map);
        String str = left+","+ right +","+ root.val;
        if(map.containsKey(str) && map.get(str) == 1){
            ans.add(root);
        };
        map.put(str, map.getOrDefault(str, 0) + 1);
        return str;
    }
    public List<TreeNode> findDuplicateSubtrees(TreeNode root) {
        List<TreeNode> ans = new ArrayList<>();
        HashMap<String, Integer> map = new HashMap<>();
        if(root == null)return ans;
        serialization(root, ans, map);
        return ans;

    }
}
